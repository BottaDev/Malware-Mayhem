using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemyPoolManager : MonoBehaviour
{
    public static EnemyPoolManager Instance = null; 
    
    public Pool<Bullet> assaultBulletPool;
    public Pool<Bullet> shieldBulletPool;
    
    public Pool<Bullet> rapidBossBulletPool;
    public Pool<Bullet> mediumBossBulletPool;
    public Pool<Bullet> slowBossBulletPool;

    private void Awake()
    {
        if (Instance == null)
            Instance = this;
    }

    private void Start()
    {
        CreatePools();
    }

    private void CreatePools()
    {
        var poolTransform = GameObject.Find("Pool").GetComponent<Transform>();
        if (poolTransform == null)
            Debug.LogError("Pool Object not found in scene");
        
        // ENEMY
        var assaultBulletFactory = new EnemyAssaultBulletFactory(poolTransform);
        assaultBulletPool = new Pool<Bullet>(assaultBulletFactory.Create, Bullet.TurnOn, Bullet.TurnOff, 10);
        
        var shieldBulletFactory = new EnemyShieldBulletFactory(poolTransform);
        shieldBulletPool = new Pool<Bullet>(shieldBulletFactory.Create, Bullet.TurnOn, Bullet.TurnOff, 4);
        
        // BOSS
        var rapidBossBulletFactory = new RapidBossBulletFactory(poolTransform);
        rapidBossBulletPool = new Pool<Bullet>(rapidBossBulletFactory.Create, Bullet.TurnOn, Bullet.TurnOff, 10);
        
        var mediumBossBulletFactory = new MediumBossBulletFactory(poolTransform);
        mediumBossBulletPool = new Pool<Bullet>(mediumBossBulletFactory.Create, Bullet.TurnOn, Bullet.TurnOff, 10);
        
        var slowBossBulletFactory = new SlowBossBulletFactory(poolTransform);
        slowBossBulletPool = new Pool<Bullet>(slowBossBulletFactory.Create, Bullet.TurnOn, Bullet.TurnOff, 10);
    }
}
