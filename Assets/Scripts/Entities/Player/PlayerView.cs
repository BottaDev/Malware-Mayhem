using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

public class PlayerView : MonoBehaviour
{
    private PlayerModel _model;
    private ParticleSystem _hoverParticles;

    private PlayerArm _currentLeftArm;
    private PlayerArm _currentRightArm;
    
    private void Awake()
    {
        _model = GetComponent<PlayerModel>();

        _hoverParticles = GetComponentInChildren<ParticleSystem>();
    }

    /// <summary>
    /// Deactivate all the arms
    /// </summary>
    /// <param name="arm"></param>
    public static void ResetArm(PlayerArm arm)
    {
        arm.gameObject.SetActive(false);
    }
    
    public static void ShowArm(List<PlayerArm> armSets, int armIndex)
    {
        // Reset all arms
        armSets.ForEach(ResetArm);

        // Enable the arm that is currently selected
        armSets[armIndex].gameObject.SetActive(true);
    }
    
    /// <summary>
    /// Show the merging effect when the player merge or hack and entity
    /// </summary>
    /// <param name="forceField"></param>
    public void ShowMergingEffect(ParticleSystemForceField forceField)
    {
        var effect = Instantiate(_model.mergeEffect, transform.position, Quaternion.identity);
        
        effect.SetUpForceField(forceField);
    }
    
    /// <summary>
    /// Show and explosion effect when the enemy is merged
    /// </summary>
    public void EndMergingEffect()
    { 
        Instantiate(_model.mergeEffect, transform.position, Quaternion.identity);
    }
    
    /// <summary>
    /// Set the visibility of the mesh renderers of the player when merging / hacking
    /// </summary>
    /// <param name="isVisible"></param>
    public void SetPlayerVisibility(bool isVisible)
    {
        _model.torso.SetActive(isVisible);
        _model.legs.SetActive(isVisible);
        _hoverParticles.gameObject.SetActive(isVisible);
    }
}
