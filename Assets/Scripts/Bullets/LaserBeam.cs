using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LaserBeam : Bullet
{
    public float range = 20;

    private void Start()
    {
        var dist = range;
        var hits = RaycastEntities();

        if (hits.Length > 0 && hits[hits.Length - 1].collider.gameObject.layer is 7 or 15 or 16 or 19)
            dist = (hits[hits.Length - 1].point - transform.position).magnitude;

        transform.localScale = new Vector3(transform.localScale.x, transform.localScale.y, dist);
        
        Destroy(gameObject, 0.2f);
    }
    
    protected override void Update() { /* Do nothing... */}
    
    protected override void FixedUpdate() { /* Do nothing... */}
    
    protected override void OnTriggerEnter(Collider other) { /* Do nothing... */ }
    
    private RaycastHit[] RaycastEntities()
    {
        var transform1 = transform;
        var hits = Physics.RaycastAll(transform1.position, transform1.forward, range);

        System.Array.Sort(hits, (x, y) => x.distance.CompareTo(y.distance));

        for (var i = 0; i < hits.Length; i++)
        {
            if (destroyMask == (destroyMask | (1 << hits[i].collider.gameObject.layer))) 
            {
                Instantiate(deathParticles, hits[i].point, Quaternion.LookRotation(-transform.forward, Vector3.up));

                switch (hits[i].collider.gameObject.layer)
                {
                    // Submodule, Wall, Enemy Shield, Player Shield, Player Shield No Wall
                    case 6 or 7 or 15 or 16 or 19:
                        System.Array.Resize(ref hits, i + 1);
                        return hits;
                    
                    // Enemy, Player, Submodule
                    case 8 or 9 or 6:
                        var entity = hits[i].collider.GetComponent<Entity>();
                
                        if (entity != null)
                            MakeDamage(entity);
                        break;
                }
            }
        }

        return hits;
    }
}
