using MM.Sound;
using UnityEngine;
using Random = UnityEngine.Random;

namespace MM.Entities.Enemies.Bosses.E_Vast.SubmoduleBosses
{
    public class MissileModuleManager : MonoBehaviour
    {
        #region Private Variables
        [Header("Area Parameters")]
        [SerializeField]private LayerMask obstacleMask;

        [SerializeField] private float secondsToStart = 3f;
        [SerializeField] private float secondsBetweenMissile = .5f;
        [SerializeField] private GameObject missile;
        private float _currentTime;
        private bool _canStart;
        #endregion
    
        #region MonoBehaviour Functions
        public void Update()
        {
            if (!gameObject.activeInHierarchy)
                return;
        
            if (!_canStart)
            {
                secondsToStart -= Time.deltaTime;
                if (secondsToStart <= 0)
                {
                    _canStart = true;
                }
                return;
            }

            if (_currentTime <= 0)
            {
                Attack();
                SetTime();
            }
            else
            {
                _currentTime -= Time.deltaTime;
            }
        }
        #endregion

        #region Private Functions
        private void Attack()
        {
            Vector3 randomPos = new Vector3(Random.Range(-25,26), 1, Random.Range(-16.5f, 16.5f));

            var colliders = Physics.OverlapSphere(randomPos, 0.1f, obstacleMask);

            if (colliders.Length > 0)
                return;
            
            // Fix the Y of the spawn
            const float yAxis = .1f;
            var pos = new Vector3 (randomPos.x, yAxis, randomPos.z);

            Instantiate(missile, pos, Quaternion.identity);
        
            AudioManager.Instance.PlayAudioClip(Sounds.SoundType.MissileLaunch, pos);
        }

        private void SetTime()
        {
            _currentTime = secondsBetweenMissile;
        }
        #endregion
    }
}