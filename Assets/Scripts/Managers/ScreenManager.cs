using System.Collections;
using UnityEngine;

public class ScreenManager : MonoBehaviour
{
    public static ScreenManager Instance;
    private UpdateManager _updateManager;

    private void Awake()
    {
        if(Instance == null)
            Instance = this;
        else
            Destroy(this);

        _updateManager = GetComponent<UpdateManager>();
    }

    private void Start()
    {
        EventManager.Instance.Subscribe("OnAbsorbedSubmodule", OnAbsorbedSubmodule);
        EventManager.Instance.Subscribe("OnReturnedBoss", OnReturnedBoss);
    }

    private void ResumeUpdate()
    {
        _updateManager.enabled = true;
    }

    private void PauseUpdate()
    {
        _updateManager.enabled = false;
    }

    private void OnAbsorbedSubmodule(params object[] parameters)
    {
        StartCoroutine(PauseAfterSubmoduleDefeat());
    }

    private void OnReturnedBoss(params object[] parameters)
    {
        StartCoroutine(PauseAfterSubmoduleDefeat());
    }

    IEnumerator PauseAfterSubmoduleDefeat()
    {
        PauseUpdate();
        yield return new WaitForSecondsRealtime(1.85f);
        ResumeUpdate();
    }
}
