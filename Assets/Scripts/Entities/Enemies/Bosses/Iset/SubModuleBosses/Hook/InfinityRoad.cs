using System.Collections.Generic;
using UnityEngine;

namespace MM.Entities.Enemies.Bosses.Iset.SubModuleBosses
{
    public class InfinityRoad : MonoBehaviour
    {
        #region Private Variables
        
        [SerializeField] private GameObject roadPrefab;
        [SerializeField] private int initialNumberOfRoads = 2;
        [SerializeField] private Transform objectMovementTransform;
        [Tooltip("This number is to prevent the road from being moved while the player is on it.")]
        [SerializeField] private int safeZone = 35;
        [Tooltip("The length of the road (axis z).")]
        [SerializeField] private float roadLength = 40;
        
        private float _zSpawn;
        private int _currentIndex;
        private List<GameObject> _activeRoads = new();

        #endregion

        #region Monobehaviour Functions

        private void Awake()
        {
            SpawnRoad(initialNumberOfRoads);
        }

        private void Update()
        {
            Debug.Log(_zSpawn);
            if(objectMovementTransform.position.z - safeZone > _zSpawn - (initialNumberOfRoads * roadLength))
            {
                Debug.Log("Entro al update");
                /*SpawnRoad(1);
                DeleteRoad();*/
                MoveRoad();
            }
        }

        #endregion

        #region Private Functions

        private void SpawnRoad(int numberOfRoads)
        {
            var t = transform;
            for (var i = 0; i < numberOfRoads; i++)
            {
                var road = Instantiate(roadPrefab, t.forward * (_zSpawn ), t.rotation, transform);
                _activeRoads.Add(road);
                _zSpawn += roadLength;
            }
        }

        private void DeleteRoad()
        {
            Destroy(_activeRoads[0]);
            _activeRoads.RemoveAt(0);
        }

        private void MoveRoad()
        {
            _activeRoads[_currentIndex].transform.position = new Vector3(0, 0, _zSpawn);
            
            _currentIndex++;
            if(_currentIndex >= _activeRoads.Count)
            {
                _currentIndex = 0;
            }
        }

        #endregion
    }
}