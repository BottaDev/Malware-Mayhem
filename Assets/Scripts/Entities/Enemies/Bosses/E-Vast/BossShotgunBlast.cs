using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class BossShotgunBlast : SubmoduleAttack
{
    [Header("Pattern Parameters")]
    [SerializeField] private string patternName;
    [SerializeField] private float initialDelay;
    [Header("Projectile Parameters")]
    [SerializeField] private float fireRate = 1f;
    [SerializeField] private BulletRound[] bulletRounds;

    private BossArm _arm;

    [Serializable]
    public class BulletRound
    {
        public GameObject projectile;
        public float angle = 20f;
    }
    
    private void Start()
    {
        _arm = GetComponent<BossArm>();
    }
    
    public override void MakeAction()
    {
        Invoke(nameof(StartShooting), initialDelay);
    }

    private void StartShooting()
    {
        StartCoroutine(Shoot());
    }
    
    private IEnumerator Shoot()
    {
        const int numberOfProjectiles = 3;

        foreach (var round in bulletRounds)
        {
            for (var i = 0; i < numberOfProjectiles; i++)
            {
                var rotation = Quaternion.AngleAxis((i - 1) * round.angle, Vector3.up);

                var transform1 = transform;
                var direction = rotation * transform1.forward;
                var position = _arm.shotSpawn.position + direction;

                // Fix the Y of the spawn
                const float yAxis = 1f;
            
                position = new Vector3(position.x, yAxis, position.z);

                var rot = rotation * transform1.rotation;
                Instantiate(round.projectile, position, rot);
            }

            yield return new WaitForSeconds(fireRate);
        }
    }
}
