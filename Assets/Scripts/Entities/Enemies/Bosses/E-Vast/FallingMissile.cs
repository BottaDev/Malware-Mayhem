using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class FallingMissile : MonoBehaviour
{
    [Header("Fall Parameters")]
    [SerializeField] private float damage = 10f;
    [SerializeField] private float shadowDuration;
    [SerializeField] private float fallDelay;
    [Header("Objects")]
    [SerializeField] private ParticleSystem impactParticles;

    private void Start()
    {
        transform.eulerAngles = new Vector3(0,180,0);
        StartCoroutine(Fall());
        StartCoroutine(Shadow());
        
        EventManager.Instance.Subscribe(EventManager.NameEvent.OnAbsorbedSubmodule, OnAbsorbedSubmodule);
        EventManager.Instance.Subscribe(EventManager.NameEvent.OnReturnedBoss, OnReturnedBoss);
    }
    
    private IEnumerator Fall()
    {
        yield return new WaitForSeconds(fallDelay);

        var position = transform.position;
        Instantiate(impactParticles, position, Quaternion.identity);

        const float radius = 1f;
        var collision = Physics.OverlapSphere(position, radius);
        foreach (var t in collision)
        {
            var a = t.gameObject;
            
            if (a.gameObject.layer != 9) 
                continue;
            
            var b = a.GetComponent<PlayerModel>();
            b.TakeDamage(damage);
        }

        const float time = 0.15f;
        yield return new WaitForSeconds(time);
        
        Destroy(gameObject);
    }

    private IEnumerator Shadow()
    {
        var startScale = Vector3.one * .3f;
        const int steps = 60;

        for (var i = 0; i < steps; i++)
        {
            transform.localScale = Vector3.Lerp(Vector3.zero, startScale, (float)i / (float)steps);
            yield return new WaitForSeconds(shadowDuration / (float)steps);
        }
    }

    private void OnReturnedBoss(params object[] parameters)
    {
        if(this != null)
            Destroy(gameObject);
    }

    private void OnAbsorbedSubmodule(params object[] parameters)
    {
        if(this != null)
            Destroy(gameObject);
    }
}
