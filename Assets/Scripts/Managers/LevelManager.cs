using UnityEngine;
using UnityEngine.SceneManagement;

public class LevelManager : MonoBehaviour
{
    public static LevelManager Instance = null;

    [Header("Boss Parameters")]
    [SerializeField] private GameObject bossSpawn;
    [SerializeField] private Transform bossSpawnPosition;
    [Tooltip("The time that the boss will spawn after the player spawning")]
    [SerializeField] private float initialSpawnTime = 8f;
    [Tooltip("The time that the boss will attack after spawning")] 
    [SerializeField] private float initialAttackTime = 3.5f;

    [Header("Player Parameters")] 
    [SerializeField] private Transform playerSpawnPosition;
    [SerializeField] private PlayerSpawn playerSpawn;
    
    private PlayerModel _player;

    private void Awake()
    {
        if (Instance == null)
            Instance = this;

        if (playerSpawn != null && playerSpawnPosition != null)
            Instantiate(playerSpawn, playerSpawnPosition.transform.position, Quaternion.identity, transform);
    }

    private void Start()
    {
        EventManager.Instance.Subscribe("OnPlayerSpawned", OnPlayerSpawned);
        EventManager.Instance.Subscribe("OnReturnedBoss", OnReturnedBoss);

        AudioManager.Instance.Stop("MainMenu");
        AudioManager.Instance.Play("Level 1-1");
    }

    public void LoseLevel()
    {
        UIManager.Instance.StartFadeIn();

        AudioManager.Instance.Stop("Level 1-1");
        AudioManager.Instance.Stop("TresholdLife");
        AudioManager.Instance.Play("LoseLevel");

        Invoke(nameof(ShowLoseScene), 2f);
    }

    public void WinLevel()
    {
        UIManager.Instance.StartFadeIn();

        AudioManager.Instance.Stop("Level 1-1");
        AudioManager.Instance.Stop("TresholdLife");

        Invoke(nameof(ShowWinScene), 2f);
    }

    public PlayerModel GetPlayer()
    {
        return _player;
    }

    private void ShowLoseScene()
    {
        ResetTimeScale();
        
        SceneLoader.Instance.ChangeLevel("LoseScene");
    }

    private void ShowWinScene()
    {
        ResetTimeScale();
        
        SceneLoader.Instance.ChangeLevel("WinScene");
    }

    private static void ResetTimeScale()
    {
        Time.timeScale = 1;        
    }
    
    private bool _mainBossSpawned;      // Prevent to spawn the boss again when the player returns to the main fight
    private void OnPlayerSpawned(params object[] parameters)
    {
        _player = (PlayerModel) parameters[1];

        if (!_mainBossSpawned)
            Invoke(nameof(SpawnBoss), initialSpawnTime);
    }

    private void OnReturnedBoss(params object[] parameters)
    {
        Invoke(nameof(SetPlayer), .1f);
    }

    private void SpawnBoss()
    {
        if (bossSpawn != null && bossSpawnPosition != null)
            Instantiate(bossSpawn, bossSpawnPosition.transform.position, Quaternion.identity, transform);

        _mainBossSpawned = true;
        
        Invoke(nameof(TriggerBossAttack), initialAttackTime);
    }

    private void TriggerBossAttack()
    {
        EventManager.Instance.Trigger("OnInitialAttackWait");
    }

    private void SetPlayer()
    {
        _player = GameObject.FindWithTag("Player").GetComponent<PlayerModel>();
    }
}
