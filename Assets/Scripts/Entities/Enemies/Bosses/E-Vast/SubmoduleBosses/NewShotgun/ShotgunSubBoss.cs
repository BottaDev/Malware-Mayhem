using System.Collections;
using MM.Common;
using MM.Events;
using UnityEngine;

namespace MM.Entities.Enemies.Bosses.E_Vast.SubmoduleBosses
{
    public class ShotgunSubBoss : SubBoss
    {
        #region Private Variables
        
        [SerializeField] private Transform bulletSpawnPoint;
        
        private bool _isMovingRight;
        private bool _playerSpawned;
        private Transform T => transform;

        #endregion

        #region MonoBehaviour Functions

        protected override void Start()
        {
            base.Start();
            
            EventManager.Instance.Subscribe(NameEvent.OnPlayerSpawned, OnPlayerSpawned);

            //Chose a random side to start moving towards
            _isMovingRight = Random.Range(0, 2) == 0;

            StartCoroutine(nameof(Shot));
        }

        private void Update()
        {
            Move();
        }

        private void OnCollisionEnter(Collision other)
        {
            if (other.gameObject.layer == 7)
            {
                _isMovingRight = !_isMovingRight;
            }
        }
        
        #endregion

        #region Private Functions

        private IEnumerator Shot()
        {
            yield return new WaitForSeconds(3f);
            
            //Chose a random side to shot the bullet
            var side = Random.Range(0, 2);
            var rotation = Quaternion.Euler(0, side == 0 ? 45 : 315, 0);

            var bullet = EnemyPoolManager.Instance.GetBouncingBossBullet();
            var bulletTrans = bullet.transform;
            bulletTrans.position = bulletSpawnPoint.position;
            bulletTrans.rotation = rotation;
        }

        private void Move()
        {
            if (_isMovingRight)
            {
                T.position += T.right * (movementSpeed * Time.deltaTime);
            }
            else
            {
                T.position -= T.right * (movementSpeed * Time.deltaTime);
            }
        }

        #endregion

        #region Events Functions

        private void OnPlayerSpawned(params object[] parameters)
        {
            _playerSpawned = true;
        }

        #endregion
    }
}
