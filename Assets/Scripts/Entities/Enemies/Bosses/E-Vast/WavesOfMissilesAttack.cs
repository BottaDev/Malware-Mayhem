using System.Collections;
using UnityEngine;

public class WavesOfMissilesAttack : SubmoduleAttack
{
    [Header("Attack Patter")]
    [SerializeField] private int missileCount = 3;
    [SerializeField] private float timeBetweenWaves = 1.5f;
    [SerializeField] private int totalWaves = 3;
    [SerializeField] private GameObject missile;
    [SerializeField] private GameObject missileModel;
    [SerializeField] private Transform[] missileModelPosition;

    [Header("Area Parameters")]
    [SerializeField, Range(1f, 30f)] private float attackRange = 12f;
    [SerializeField] private LayerMask obstacleMask;

    public override void MakeAction()
    {
        base.MakeAction();
        StartCoroutine(SpawnMissiles());
    }

    private IEnumerator SpawnMissiles()
    {
        for (var i = 0; i < totalWaves; i++)
        {
            for (var x = 0; x < missileCount; x++)
            {
                if(_submodule.GetIsStunned())
                    yield return null;

                var randomPos = Random.insideUnitSphere * attackRange + transform.position;
                randomPos.y = .1f;

                var colliders = Physics.OverlapSphere(randomPos, .1f, obstacleMask);
            
                if(colliders.Length > 0)
                    continue;

                Instantiate(missileModel, missileModelPosition[i].position, Quaternion.identity);
                
                AudioManager.Instance.PlayAudioClip(Sounds.SoundType.MissileLaunch, missileModelPosition[i].position);

                const float yAxis = 1f;
                var pos = new Vector3(randomPos.x, yAxis, randomPos.z);

                Instantiate(missile, pos, Quaternion.identity);
            }
            
            yield return new WaitForSeconds(timeBetweenWaves);
        }
    }
}