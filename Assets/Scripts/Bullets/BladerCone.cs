using UnityEngine;
using System.Collections;

public class BladerCone : MonoBehaviour
{
    [SerializeField] private float damage;
    [SerializeField] private LayerMask destroyMask;
    [SerializeField] private Texture[] textures;

    public MeshRenderer mr;
    private void Start()
    {
        if(!mr)
            mr = GetComponent<MeshRenderer>();
    }

    private void OnEnable()
    {
        StartCoroutine(Animate());
    }

    private void OnTriggerEnter(Collider other)
    {
        MakeDamage(other.gameObject);
    }

    private void MakeDamage(GameObject other)
    {
        if (destroyMask != (destroyMask | (1 << other.layer))) 
            return;
        
        switch (other.layer)
        {
            // Enemy, Player
            case 8 or 9:
                other.GetComponent<Entity>().TakeDamage(damage, PlayerArm.ArmType.BladeArm);
                break;
            
            // Submodule
            case 6:
                other.GetComponent<BossSubmodule>().TransmitDamage(damage, PlayerArm.ArmType.BladeArm);
                break;
        }
    }

    IEnumerator Animate()
    {
        float duration = .25f;
        int steps = 30;

        for (int i = 0; i < 30; i++)
        {
            int currentTexture = (int)(((float)i / (float)steps) * textures.Length);
            print("i: " + i + " steps: " + steps + " currentTexture: " + currentTexture);

            if(currentTexture < textures.Length)
                mr.material.mainTexture = textures[currentTexture];   

            yield return new WaitForSeconds( duration/steps);
        }

    }
}
