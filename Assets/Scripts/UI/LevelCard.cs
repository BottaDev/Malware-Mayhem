using TMPro;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using MM.ScriptableObjects;

namespace MM.UI
{ 
    public class LevelCard : MonoBehaviour
    {
        #region Private Variables
        
        [SerializeField] private TextMeshProUGUI levelNameText;
        [SerializeField] private TextMeshProUGUI levelDescriptionText;
        [SerializeField] private GameObject[] difficultyStars;
        [SerializeField] private Image bossImage;
        [SerializeField] private Button playButton;
        
        [SerializeField] private RectTransform levelIndicator;

        private LevelCardData _levelCardData;

        #endregion

        #region Properties

        public RectTransform LevelIndicator => levelIndicator;

        #endregion

        #region MonoBehaviour Functions
        
        private void Awake()
        {
            playButton.onClick.AddListener(PlayLevel);
        }

        #endregion

        #region Public Functions
        
        /// <summary>
        /// Set the data of the level card.
        /// </summary>
        /// <param name="levelCardData"> The SO that have the necessary data </param>
        public void SetLevelCardData(LevelCardData levelCardData)
        {
            _levelCardData = levelCardData;
            
            if(_levelCardData.LevelName != string.Empty)
            {
                levelNameText.enabled = true;
                levelNameText.text = _levelCardData.LevelName;
            }
            else
            {
                levelNameText.enabled = false;
            }
            
            if(_levelCardData.LevelDescription != string.Empty)
            {
                levelDescriptionText.enabled = true;
                levelDescriptionText.text = _levelCardData.LevelDescription;
            }
            else
            {
                levelDescriptionText.enabled = false;
            }
            
            if(_levelCardData.BossImage != null)
            {
                bossImage.enabled = true;
                bossImage.sprite = _levelCardData.BossImage;
            }
            else
            {
                bossImage.enabled = false;
            }

            for (var i = difficultyStars.Length - 1; i >= 0; i--)
            {
                difficultyStars[i].SetActive(i < _levelCardData.Difficulty);
            }
        }
        
        public LevelCardData GetLevelCardData()
        {
            return _levelCardData;
        }

        #endregion

        #region Private Functions
        
        /// <summary>
        /// Change the scene to the level
        /// </summary>
        private void PlayLevel()
        {
            SceneManager.LoadScene(_levelCardData.SceneName);
        }

        #endregion
    }
}