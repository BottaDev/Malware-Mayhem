using UnityEngine;
using System.Collections;

public class BladerCone : MonoBehaviour
{
    [SerializeField] private float damage;
    [SerializeField] private LayerMask destroyMask;
    [SerializeField] private Texture[] textures;

    public MeshRenderer mr;
    private void Start()
    {
        if(!mr)
            mr = GetComponent<MeshRenderer>();
    }

    private void OnEnable()
    {
        StartCoroutine(Animate());
    }

    private void OnTriggerEnter(Collider other)
    {
        MakeDamage(other.gameObject);
    }

    private void MakeDamage(GameObject other)
    {
        if (destroyMask != (destroyMask | (1 << other.layer))) 
            return;
        
        switch (other.layer)
        {
            // Enemy, Player
            case 8 or 9:
                var entity = other.GetComponent<Entity>();
                
                if (entity != null)
                    entity.TakeDamage(damage, PlayerArm.ArmType.BladeArm);
                else
                    Debug.LogError("Entity not found on blader cone");
                break;
            
            // Submodule
            case 6:
                var bossSubmodule = other.GetComponent<BossSubmodule>();
                
                if (bossSubmodule != null)
                    bossSubmodule.TakeDamage(damage, PlayerArm.ArmType.BladeArm);
                else
                    Debug.LogError("BossSubmodule not found on blader cone");
                break;
        }
    }

    private IEnumerator Animate()
    {
        const float duration = .25f;
        const int steps = 30;

        for (var i = 0; i < 30; i++)
        {
            var currentTexture = (int)(((float)i / (float)steps) * textures.Length);

            if(currentTexture < textures.Length)
                mr.material.mainTexture = textures[currentTexture];   

            yield return new WaitForSeconds( duration/steps);
        }

    }
}
