using EZCameraShake;
using UnityEngine;

public class AttackArm : Arm
{
    [Header("Attack Parameters")]
    public float fireRate;
    public Transform shotSpawn;
    
    [Space,Header("Camera Shake")] 
    [Tooltip("The intensity of the shake.")]
    [SerializeField, Range(1f,10f)] protected float magnitude;
    [Tooltip("How rough the shake is. Lower values are slow and smooth, higher values are fast and jarring")]
    [SerializeField, Range(1f,20f)] protected float roughness;
    [Tooltip("The time, in seconds, for the shake to fade in")]
    [SerializeField, Range(0f,10f)] protected float fadeIn;
    [Tooltip("The time, in seconds, for the shake to fade out")]
    [SerializeField, Range(0f,10f)] protected float fadeOut;

    protected float _currentFireRate;
    
    public override void MakeAction()
    {
        if (_currentFireRate <= 0)
            Shoot();
    }

    private void Shoot()
    {
        var bullet = _controller.bulletPool.Get();
        bullet.pool = _controller.bulletPool;
        bullet.transform.position = shotSpawn.position;
        bullet.transform.eulerAngles = transform.eulerAngles;
        
        SubtractTime(useDurationLoss);
        
        CameraShaker.Instance.ShakeOnce(magnitude, roughness, fadeIn, fadeOut);
        
        AudioManager.Instance.Play("BasicShot");

        _currentFireRate = fireRate;
    }

    protected override void Update()
    {
        base.Update();
        _currentFireRate -= Time.deltaTime;
    }
}
