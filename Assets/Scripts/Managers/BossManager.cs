using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class BossManager : MonoBehaviour
{
    public static BossManager Instance;

    [SerializeField] private List<GameObject> bossSubmodules = new();
    private bool _fightSubmodule;
    private int _moduleIndex;
    [SerializeField] private int waitToAttack;
    private bool attackPaused;

    private void Awake()
    {
        if (Instance == null)
            Instance = this;
    }

    private void Start()
    {
        EventManager.Instance.Subscribe("OnAbsorbedSubmodule", OnAbsorbedSubmodule);
        EventManager.Instance.Subscribe("OnReturnedBoss", OnReturnedBoss);
    }

    private void OnAbsorbedSubmodule(params object[] parameters)
    {
        _moduleIndex = (int) parameters[0];
        foreach (var t in bossSubmodules)
        {
            t.SetActive(false);
        }

        bossSubmodules[_moduleIndex].SetActive(true);
        _fightSubmodule = true;
        StartCoroutine(WaitToFireAgain());
    }
    
    private void OnReturnedBoss(params object[] parameters)
    {
        foreach (var t in bossSubmodules)
        {
            t.SetActive(false);
        }
        
        bossSubmodules[0].SetActive(true);
        _fightSubmodule = false;
        StartCoroutine(WaitToFireAgain());
    }

    public bool CheckFightSubmodule()
    {
        return _fightSubmodule;
    }

    public bool GetAttackPause()
    {
        return attackPaused;
    }

    private IEnumerator WaitToFireAgain()
    {
        attackPaused = true;
        yield return new WaitForSecondsRealtime(waitToAttack);
        attackPaused = false;
    }
}
