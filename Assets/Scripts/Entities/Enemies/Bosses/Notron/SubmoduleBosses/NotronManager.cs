using System.Collections;
using System.Collections.Generic;
using MM.Events;
using UnityEngine;

namespace MM.Entities.Enemies.Bosses.Notron.SubmoduleBosses
{
    public class NotronManager : MonoBehaviour
    {
        #region Private Variables
        [SerializeField] private float timeToSetShield;
        [SerializeField] private List<CannonSubModules> cannons = new();
        private LaserGenerator _laserGenerator;
        #endregion

        #region MonoBehaviour Functions
        private void Awake()
        {
            _laserGenerator = GetComponentInChildren<LaserGenerator>();
        }

        private void Start()
        {
            StartCoroutine(SetShield());
        }
        #endregion

        #region Private Functions
        private IEnumerator SetShield()
        {
            yield return new WaitForSeconds(timeToSetShield);
            _laserGenerator.SetShield(true);
        }

        private void CheckCannons()
        {
            for (var i = 0; i < cannons.Count; i++)
            {
                if(cannons[i] == null)
                    cannons.RemoveAt(i);
            }
        
            if (cannons.Count == 0)
                _laserGenerator.SetShield(false);
        }
        #endregion
        
        #region Public Functions
        public void CannonDestroyed()
        {
            Invoke("CheckCannons", 1f);
        }
        
        public void LaserDestroyed(int submoduleIndex)
        {
            EventManager.Instance.Trigger(NameEvent.OnReturnedBoss, true, submoduleIndex);
        }
        #endregion
    }
}
