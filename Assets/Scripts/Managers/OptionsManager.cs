using System.Linq;
using MM.Common;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

namespace MM.Data
{
    /// <summary>
    /// Save the settings of the game.
    /// </summary>
    public class OptionsManager : MonoBehaviourSingleton<OptionsManager>
    {
        #region Private Variables
        [SerializeField] private Slider volumeSlider;
        [SerializeField] private Toggle fullScreenToggle;
        [SerializeField] private TMP_Dropdown resolutionDropdown;
        
        private Resolution[] _resolutions;
        #endregion

        #region MonoBehaviour Functions
        private void Start()
        {
            LoadSettings();
        }
        #endregion
        
        #region Public Functions
        public void SetVolume(float volume)
        {
            AudioListener.volume = volume;
            
            SaveFile.Instance.Settings.Sound = volume;;
            SaveFile.Save();
        }

        public void SetFullscreen(bool isFullscreen)
        {
            Screen.fullScreen = isFullscreen;
            
            SaveFile.Instance.Settings.FullScreen = isFullscreen;
            SaveFile.Save();
        }

        public void SetResolution(int resolutionIndex)
        {
            var resolution = _resolutions[resolutionIndex];
            Screen.SetResolution(resolution.width, resolution.height, Screen.fullScreen);
            
            SaveFile.Instance.Settings.Resolution = resolutionIndex;
            SaveFile.Save();
        }
        #endregion

        #region Private Functions
        private void InitializeResolutionDropdown()
        {
            _resolutions = Screen.resolutions;
            resolutionDropdown.ClearOptions();
            
            var options = _resolutions.Select(t => t.width + " x " + t.height).ToList();

            resolutionDropdown.AddOptions(options);
            
            resolutionDropdown.value = SaveFile.Instance.Settings.Resolution;
            resolutionDropdown.RefreshShownValue();
        }
        
        private void LoadSettings()
        {
            // Initialize the volume slider.
            volumeSlider.value = SaveFile.Instance.Settings.Sound;
            
            // Initialize the full screen toggle.
            fullScreenToggle.isOn = SaveFile.Instance.Settings.FullScreen;
            
            InitializeResolutionDropdown();
        }
        #endregion
    }

}
