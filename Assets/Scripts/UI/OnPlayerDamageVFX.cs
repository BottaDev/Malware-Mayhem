using System.Collections;
using UnityEngine;
using UnityEngine.Rendering.PostProcessing;

public class OnPlayerDamageVFX : MonoBehaviour
{
    public float duration;
    private float _maxVolume = 1;
    private int steps = 15;

    private PostProcessVolume volume;

    private void Start()
    {
        EventManager.Instance.Subscribe("OnPlayerDamaged", OnPlayerDamaged);
        
        volume = GetComponent<PostProcessVolume>();
    }

    private void OnPlayerDamaged(params object[] parameters)
    {
        StartCoroutine(DamageTakenVFX());
    }

    public IEnumerator DamageTakenVFX()
    {
        float stepTime = duration / (float)steps;
        for (int i = 0; i < steps; i++)
        {
            volume.weight = Mathf.Lerp(_maxVolume, 0, (float)i / steps);
            yield return new WaitForSeconds(stepTime);
        }
    }
}
