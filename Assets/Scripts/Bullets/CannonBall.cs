using MM.Entities;
using UnityEngine;

namespace MM.Bullets
{
    public class CannonBall : Bullet
    {
        #region Private Variables
        [Header("Cannon Ball Parameters")]
        [SerializeField] private float explosionRadius = 3.5f;
        #endregion
    
        #region Private Functions
        protected override void DestroyBullet(GameObject other)
        {
            // Check if object is not in destroyMask
            if (bulletData.destroyMask != (bulletData.destroyMask | (1 << other.layer))) 
                return;

            Explode();
        
            ReturnToPool();
        }

        private void Explode()
        {
            var particles = Instantiate(bulletData.deathParticles, transform.position, Quaternion.identity);
            particles.transform.forward = -transform.forward;
        
            // Check if any player entity is in the explosion radius
            var playerEntities = Physics.OverlapSphere(transform.position, explosionRadius, 1 << 9);
            foreach (var playerEntity in playerEntities)
            {
                MakeDamage(playerEntity.GetComponent<Entity>());
            }
        }
        #endregion
    
        #region MonoBehaviour Functions
        private void OnDrawGizmosSelected()
        {
            Gizmos.color = Color.red;
            Gizmos.DrawWireSphere(transform.position, explosionRadius);
        }
        #endregion
    }
}
