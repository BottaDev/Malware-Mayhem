using UnityEngine;
using UnityEngine.UI;

public class InputManager : MonoBehaviourSingleton<InputManager>
{
    public LayerMask groundLayerMask;
    public Vector2Int screenRes = new Vector2Int(768, 432);
    public Vector3 mousePosition = Vector3.zero;
    public Texture2D cursorImage;
    [SerializeField] private Camera[] levelCameras;
    
    private float _screenScaleFactor;
    private CanvasScaler _canvasScaler;
    private Camera _cam;

    private static bool IsPaused => PauseManager.Instance.isPaused;

    protected override void Awake()
    {
        base.Awake();

        _cam = levelCameras[0];

        Cursor.lockState = CursorLockMode.Confined;

        _canvasScaler = GameObject.Find("Gameplay Canvas").GetComponent<CanvasScaler>();

        // Calculate the hotspot position of the cursor image based on the canvas scaler reference resolution and screen resolution
        var hotSpot = new Vector2(
            cursorImage.width / (_canvasScaler.referenceResolution.x / screenRes.x),
            cursorImage.height / (_canvasScaler.referenceResolution.y / screenRes.y)
        );
        
        // Set the cursor image and hotspot position
        Cursor.SetCursor(cursorImage, hotSpot, CursorMode.Auto);

        // Calculate the screen scale factor by dividing desired screen resolution by the actual screen width
        _screenScaleFactor = (float)screenRes.x / Screen.width;
    }

    private void Start()
    {
        EventManager.Instance.Subscribe(EventManager.NameEvent.OnAbsorbedSubmodule, OnAbsorbedSubmodule);
        EventManager.Instance.Subscribe(EventManager.NameEvent.OnReturnedBoss, OnReturnedBoss);
    }

    private void Update()
    {
        if(_cam == null) 
            return;
        
        if (!IsPaused)
            SetMousePosition();
    }

    private void SetMousePosition()
    {
        Physics.Raycast(_cam.ScreenPointToRay(Input.mousePosition * _screenScaleFactor), out var ray, Mathf.Infinity, groundLayerMask, QueryTriggerInteraction.Ignore);
        
        mousePosition = ray.point;
        mousePosition.y = 0;
    }

    private void OnAbsorbedSubmodule(params object[] parameters)
    {
        var cameraIndex = (int)parameters[0];
        _cam = levelCameras[cameraIndex];
    }

    private void OnReturnedBoss(params object[] parameters)
    {
        _cam = levelCameras[0];
    }
}
