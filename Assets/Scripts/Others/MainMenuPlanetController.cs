using MM.UI;
using UnityEngine;

namespace MM.Others
{
    public class MainMenuPlanetController : MonoBehaviour
    {
        #region Private Variables
        [SerializeField] private float rotationSpeed = 5f;
        
        private Camera _mainCamera;
        private bool _canRotate;
        #endregion

        #region MonoBehaviour Functions
        private void Start()
        {
            _mainCamera = Camera.main;
        }

        private void Update()
        {
            if (!Input.GetMouseButton(0) || !_canRotate) 
                return;
            
            RotateOnClick();
        }

        private void OnMouseDown()
        {
            // Remove the level window if player rotates the planet
            MenuUIManager.Instance.ShowLevel();
        }
        #endregion

        #region Private Functions
        private void RotateOnClick()
        {
            var ray = _mainCamera.ScreenPointToRay(Input.mousePosition);

            if (Physics.Raycast(ray, out var hit))
            {
                var mouseX = Input.GetAxis("Mouse X") * rotationSpeed;
                var mouseY = Input.GetAxis("Mouse Y") * rotationSpeed;

                transform.Rotate(Vector3.up, -mouseX, Space.World);
                transform.Rotate(Vector3.right, mouseY, Space.World);
            }
        }
        
        #endregion
        
        #region Public Functions
        public void SetCanRotate(bool canRotate)
        {
            _canRotate = canRotate;
        }
        
        public void RotateToPosition(Vector3 position)
        {
            transform.rotation = Quaternion.LookRotation(position);
        }
        
        #endregion
    }
}