using System.Collections;
using MM.Events;
using UnityEngine;

namespace MM.Entities.Enemies.Bosses.E_Vast.SubmoduleBosses
{
    public class MissileHoles : MonoBehaviour
    {
        #region Private Variables
        [SerializeField] private int index;
        [SerializeField] private GameObject[] gates;
        #endregion
    
        #region MonoBehaviour Functions
        private void Start()
        {
            EventManager.Instance.Subscribe(NameEvent.OnMissileBossMoved, OnMissileBossMove);
        }
        #endregion

        #region Events
        private void OnMissileBossMove(params object[] parameters)
        {
            if(index != (int) parameters[1] + 1)
                return;

            StartCoroutine(MoveGate((bool)parameters[0]));
        }
        #endregion

        #region Private Functions
        private IEnumerator MoveGate(bool open)
        {
            for (var i = 0; i < 40; i++)
            {
                if (open)
                {
                    gates[0].transform.position -= gates[0].transform.right * .1f;
                    gates[1].transform.position += gates[1].transform.right * .1f;
                }
                else
                {
                    gates[1].transform.position -= gates[1].transform.right * .1f;
                    gates[0].transform.position += gates[0].transform.right * .1f;
                }
                yield return new WaitForSeconds(.01F);
            }
        }
        #endregion
    }
}