using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace MM.Entities.Enemies.Bosses.Iset.SubModuleBosses
{
    public class WallsMovement : MonoBehaviour
    {
        #region Private Variables

        [SerializeField] private List<Transform> positions;
        [SerializeField] private float movementSpeed = 50;
        [SerializeField] private float timeBetweenMovements = 1;
        [SerializeField] private float timeStopped = 1;
        
        private float _currentSpeed;
        private int _currentPos;
        private bool _firstPosition = true;
        private Transform _t;
        private Rigidbody _rb;
        
        #endregion

        #region Properties

        public bool IsStopped { get; private set; }

        #endregion

        #region Monobehaviour Functions
        
        private void Awake()
        {
            _t = transform;
            _rb = GetComponent<Rigidbody>();
            
            _currentSpeed = movementSpeed;
        }
        
        private void FixedUpdate()
        {
            var position = _t.position;
            var lookPos = positions[_currentPos].position - position;
            _rb.MovePosition(position + lookPos.normalized * (Time.fixedDeltaTime * _currentSpeed));
            
            if (!IsStopped && Vector3.Distance(transform.position, positions[_currentPos].position) < 1)
            {
                StartCoroutine(nameof(Stop));
            }
        }

        #endregion

        #region Private Functions
        
        private IEnumerator Stop()
        {
            _currentSpeed = 0;
            IsStopped = true;
            
            yield return new WaitForSeconds(timeStopped);
            
            _currentPos++;
            if (_currentPos >= positions.Count)
            {
                _currentPos = 0;
            }
            
            _currentSpeed = movementSpeed;

            if (_firstPosition)
            {
                positions.RemoveAt(0);
                _currentPos = 0;
                _firstPosition = false;
            }
            
            yield return new WaitForSeconds(timeBetweenMovements);
            
            IsStopped = false;
        }

        #endregion
    }
}