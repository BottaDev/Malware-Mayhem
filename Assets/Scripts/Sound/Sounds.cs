using System;
using UnityEngine;
using Random = UnityEngine.Random;

namespace Sound
{
    /// <summary>
    /// Organize and manage different sound types and their variations.
    /// </summary>
    [Serializable]
    public class Sounds
    {
        #region Private Variables
        [SerializeField] private string name;
        [SerializeField] private SoundType type;
        [Space]
        [Tooltip("An array of Sound objects representing different variations of this sound")]
        [SerializeField] private Sound[] clips;
        #endregion
    
        #region Public Variables
        public SoundType GetSoundType() => type;
        #endregion
    
        #region Public Functions
        public Sound GetRandomSound()
        {
            return clips[Random.Range(0, clips.Length)];
        }
        #endregion
    
        [Serializable]
        public class Sound
        {
            [SerializeField] private string name  = "New Clip";
            [SerializeField] private AudioClip clip;
            [SerializeField] private float minPitch = 0.7f;
            [SerializeField] private float maxPitch = 1f;
            [SerializeField, Range(0f, 1f)] private float volume = 1f;

            public AudioClip GetSoundClip() => clip;
        
            public float GetMinPitch() => minPitch;
            public float GetMaxPitch() => maxPitch;
            public float GetVolume() => volume;
        }
    
        public enum SoundType
        {
            // PLAYER
            BasicShot,
            BlueShot,
            PlayerDamaged,
            AbsorbEnemy,
            SwordAttack,
        
            // ENEMY
            EnemyLaser,
            EnemyBlueShot,
            EnemyDamaged,
            EnemyDead,
            EnemyFallImpact,
            MissileLaunch,
            BladerAttack,
        
            Hacking
        }
    }
}
