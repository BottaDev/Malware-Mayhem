using UnityEngine;

namespace Bullets.Factories
{
    public class RapidBossBulletFactory : IFactory<Bullet>
    {
        #region Private Variables
        private readonly Transform _parent;
        private readonly BulletColor _color;
        #endregion
    
        #region Public Functons
        public RapidBossBulletFactory(Transform parent, BulletColor color)
        {
            _parent = parent;
            _color = color;
        }

        public Bullet Create()
        {
            Bullet bullet;

            switch (_color)
            {
                default:
                case BulletColor.Green:
                    bullet = ResourceManager.Instance.ResourceTable.GetValue("RapidGreenBossBullet").GetComponent<Bullet>();
                    break;
                case BulletColor.Blue:
                    bullet = ResourceManager.Instance.ResourceTable.GetValue("RapidBlueBossBullet").GetComponent<Bullet>();
                    break;
                case BulletColor.Red:
                    bullet = ResourceManager.Instance.ResourceTable.GetValue("RapidRedBossBullet").GetComponent<Bullet>();
                    break;
                case BulletColor.Orange:
                    bullet = ResourceManager.Instance.ResourceTable.GetValue("RapidOrangeBossBullet").GetComponent<Bullet>();
                    break;
            }

            return Object.Instantiate(bullet, _parent);
        }
        #endregion
    
        public enum BulletColor
        {
            Green,
            Blue,
            Red,
            Orange
        }
    }
}
