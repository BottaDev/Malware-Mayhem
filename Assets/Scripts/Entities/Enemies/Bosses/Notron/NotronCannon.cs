using MM.Entities.Enemies.Bosses.E_Vast;
using UnityEngine;

namespace MM.Entities.Enemies.Bosses.Notron
{
    public class NotronCannon : BossArm
    {
        #region Private Variables
        [Header("Objects")]
        [SerializeField] private GameObject laser;
        [SerializeField] private ParticleSystem shootParticlesPrefab;
        #endregion

        #region Private Functions
        protected override void Rotate()
        {
            if (_bossSubmodule.GetIsStunned())
                return;

            Vector3 targetPosition;
            if (!CheckPlayer() && _lookAtPlayer)
                targetPosition = _player.transform.position;
            else
                targetPosition = restDirection.position;

            var directionToTarget = targetPosition - transform.position;
            directionToTarget.y = 0f; // Constrain rotation to the Y-axis
            var targetRotation = Quaternion.LookRotation(directionToTarget, Vector3.up);

            // Calculate the rotation angle around the Y-axis
            var rotationAngle = Quaternion.Angle(transform.rotation, targetRotation) * Mathf.Sign(directionToTarget.x - transform.forward.x);

            // Check if the rotation angle is within the valid range
            if (rotationAngle < arm.minAngle || rotationAngle > arm.maxAngle)
                return;

            // Use Quaternion.RotateTowards to limit the rotation angle
            var maxRotationAngle = rotationSpeed * Time.deltaTime;
            transform.rotation = Quaternion.RotateTowards(transform.rotation, targetRotation, maxRotationAngle);
        }
        #endregion
        
        #region Public Functions
        public GameObject GetLaser()
        {
            return laser;
        }
    
        public ParticleSystem GetShootParticlesPrefab()
        {
            return shootParticlesPrefab;
        }
        #endregion
    }
}
