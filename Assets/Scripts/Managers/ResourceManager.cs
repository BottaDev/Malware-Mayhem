using MM.Common;
using UnityEngine;

namespace MM.Resource
{
    public class ResourceManager : MonoBehaviourSingleton<ResourceManager>
    {
        #region Properties

        public LookupTable<string, GameObject> ResourceTable;

        #endregion

        #region MonoBehaviour Functions

        protected override void Awake()
        {
            base.Awake();

            ResourceTable = new LookupTable<string, GameObject>(GetFromResources);
        }

        #endregion

        #region Private Functions

        private static GameObject GetFromResources(string objName)
        {
            GameObject newObj = null;

            switch (objName)
            {
                case "SoundSource":
                    newObj = Resources.Load<GameObject>("Prefabs/Sound/SoundSource");
                    break;

                // PLAYER
                case "BasicBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Player/BasicBullet");
                    break;
                case "AssaultBullet_Player":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Player/AssaultBullet_Player");
                    break;
                case "ShieldBullet_Player":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Player/ShieldBullet_Player");
                    break;


                // ENEMY
                case "AssaultBullet_Enemy":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/AssaultBullet_Enemy");
                    break;
                case "ShieldBullet_Enemy":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/ShieldBullet_Enemy");
                    break;


                // BOSS
                case "SlowGreenBossBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/SlowGreenBossBullet");
                    break;
                case "MediumGreenBossBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/MediumGreenBossBullet");
                    break;
                case "RapidGreenBossBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/RapidGreenBossBullet");
                    break;
                case "PowerfulGreenBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/PowerfulGreenBullet");
                    break;

                case "SlowRedBossBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/Red/SlowRedBossBullet");
                    break;
                case "MediumRedBossBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/Red/MediumRedBossBullet");
                    break;
                case "RapidRedBossBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/Red/RapidRedBossBullet");
                    break;
                case "PowerfulRedBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/Red/PowerfulRedBullet");
                    break;

                case "SlowBlueBossBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/Blue/SlowBlueBossBullet");
                    break;
                case "MediumBlueBossBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/Blue/MediumBlueBossBullet");
                    break;
                case "RapidBlueBossBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/Blue/RapidBlueBossBullet");
                    break;
                case "PowerfulBlueBullet":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Generic/Blue/PowerfulBlueBullet");
                    break;

                case "SlowOrangeBossBullet":
                    newObj = Resources.Load<GameObject>(
                        "Prefabs/Bullets/Enemy/Boss/Generic/Orange/SlowOrangeBossBullet");
                    break;
                case "MediumOrangeBossBullet":
                    newObj = Resources.Load<GameObject>(
                        "Prefabs/Bullets/Enemy/Boss/Generic/Orange/MediumOrangeBossBullet");
                    break;
                case "RapidOrangeBossBullet":
                    newObj = Resources.Load<GameObject>(
                        "Prefabs/Bullets/Enemy/Boss/Generic/Orange/RapidOrangeBossBullet");
                    break;
                case "PowerfulOrangeBullet":
                    newObj = Resources.Load<GameObject>(
                        "Prefabs/Bullets/Enemy/Boss/Generic/Orange/PowerfulOrangeBullet");
                    break;

                case "CannonBall":
                    newObj = Resources.Load<GameObject>("Prefabs/Bullets/Enemy/Boss/Notron/CannonBall");
                    break;
            }

            return newObj;
        }

        #endregion
    }
}