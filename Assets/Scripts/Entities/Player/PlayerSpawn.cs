using System.Collections;
using Sound;
using UnityEngine;

public class PlayerSpawn : MonoBehaviour
{
    public float shadowDuration;
    public float fallDelay;
    public ParticleSystem impactParticles;
    public GameObject playerMeteor;
    public PlayerController player;

    private readonly Vector3 _enemyStartPosition = new Vector3(10,15,10);
    private float _fallDuration;
    private bool _stopSpawn;
    
    private void Start()
    {
        if (_stopSpawn) 
            return;

        transform.eulerAngles = new Vector3(0,180,0);
        _fallDuration = shadowDuration - fallDelay;
        StartCoroutine(Fall());
        StartCoroutine(Shadow());
    }
    
    private IEnumerator Fall()
    {
        var steps = 15;
        var meteor = Instantiate(playerMeteor, transform.position + _enemyStartPosition, Quaternion.identity);
        
        yield return new WaitForSeconds(fallDelay);
        
        for (var i = 0; i < steps; i++)
        {
            meteor.transform.position = Vector3.Lerp(transform.position + _enemyStartPosition, transform.position, (float)i / steps);
            yield return new WaitForSeconds(_fallDuration / steps);
        }
        
        meteor.transform.position = transform.position;
        Instantiate(impactParticles, transform.position, Quaternion.identity);

        yield return new WaitForSeconds(.15f);
        
        var playerGO = Instantiate(player.gameObject, transform.position, Quaternion.identity);
        playerGO.transform.parent = this.transform.parent;
        
        AudioManager.Instance.PlayAudioClip(Sounds.SoundType.EnemyFallImpact, transform.position);

        Destroy(meteor);
        Destroy(gameObject);
    }

    private IEnumerator Shadow()
    {
        var startScale = Vector3.one * .3f;
        var steps = 60;

        for (var i = 0; i < steps; i++)
        {
            transform.localScale = Vector3.Lerp(Vector3.zero, startScale, (float)i / steps);
            yield return new WaitForSeconds(shadowDuration / steps);
        }
    }
}
