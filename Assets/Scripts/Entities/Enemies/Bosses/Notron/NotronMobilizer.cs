using MM.Entities.Player;
using MM.Gameplay;
using UnityEngine;
using UnityEngine.AI;

namespace MM.Entities.Enemies.Bosses.Notron
{
    public class NotronMobilizer : MonoBehaviour
    {
        #region Private Variables
        [SerializeField] private float stoppingDistance = 1f;
    
        private NavMeshAgent _agent;
        private PlayerModel _player;
        private Entity _boss;
        private bool _stopMovement;
        #endregion

        #region MonoBehaviour Functions
        private void Awake()
        {
            _agent = GetComponent<NavMeshAgent>();
            _boss = GetComponent<Entity>();
        }

        private void Update()
        {
            if (_boss.GetHp() <= 0 ||
                CheckPlayer() ||
                BossManager.Instance.GetAttackPause())
            {
                return;   
            }
        
            Move();
        }
        #endregion
    
        #region Private Functions
        private void Move()
        {
            if (_stopMovement)
            {
                _agent.speed = 0;
                _agent.destination = transform.position;
                return;   
            }

            _agent.speed = _boss.GetMovementSpeed();

            var distance = Vector3.Distance(_player.transform.position, transform.position);
            if (distance <= stoppingDistance)
            {
                _agent.destination = transform.position;    
                return;   
            }

            _agent.destination = _player.transform.position;
        }
    
        /// <summary>
        /// Check if the player exists in the level
        /// </summary>
        /// <returns></returns>
        private bool CheckPlayer()
        {
            if (_player == null)
                _player = LevelManager.Instance.GetPlayer();

            return _player == null;
        }
        #endregion
        
        #region Public Functions
        /// <summary>
        ///  Stop the default movement of the boss when the submodule attacks
        /// </summary>
        public void StopMovement()
        {
            _stopMovement = true;
        }

        /// <summary>
        /// Reset the default movement of the boss
        /// </summary>
        public void RestartMovement()
        {
            _stopMovement = false;
        }
        #endregion
        
        #region Events
        private void OnDrawGizmosSelected()
        {
            Gizmos.color = Color.yellow;
            Gizmos.DrawWireSphere(transform.position, stoppingDistance);
        }
        #endregion
    }
}
