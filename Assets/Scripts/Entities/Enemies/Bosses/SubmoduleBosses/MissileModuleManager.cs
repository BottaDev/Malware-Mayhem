using UnityEngine;
using Random = UnityEngine.Random;

public class MissileModuleManager : MonoBehaviour, IUpdatable
{
    [Header("Area Parameters")]
    [SerializeField, Range(1f, 30f)] private float attackRange = 12f;
    [SerializeField]private LayerMask obstacleMask;

    [SerializeField] private float secondsToStart = 3f;
    [SerializeField] private float secondsBetweenMissile = .5f;
    [SerializeField] private GameObject missile;
    private float _currentTime;
    private bool _canStart;
    
    private void Awake()
    {
        UpdateManager.Instance.updates.Add(this);
    }

    public void FalseUpdate()
    {
        if (!_canStart)
        {
            secondsToStart -= Time.deltaTime;
            if (secondsToStart <= 0)
            {
                _canStart = true;
            }
            return;
        }

        if (_currentTime <= 0)
        {
            Attack();
            SetTime();
        }
        else
        {
            _currentTime -= Time.deltaTime;
        }
    }

    private void Attack()
    {
        var randomPosition = Random.insideUnitSphere * attackRange + transform.position;
        randomPosition.y = 0.1f;
            
        var colliders = Physics.OverlapSphere(randomPosition, 0.1f, obstacleMask);

        if (colliders.Length > 0)
            return;
            
        // Fix the Y of the spawn
        const float yAxis = 1f;
        var pos = new Vector3 (randomPosition.x, yAxis, randomPosition.z);

        Instantiate(missile, pos, Quaternion.identity);
    }

    private void SetTime()
    {
        _currentTime = secondsBetweenMissile;
    }
}