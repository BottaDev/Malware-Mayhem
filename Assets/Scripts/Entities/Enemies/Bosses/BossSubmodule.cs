using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

public class BossSubmodule : Entity
{
    [Header("Stun Parameters")]
    [SerializeField] private float stunTime = 5f;
    [Tooltip("The percentage that the module recovers when leaving the stun state")]
    [SerializeField, Range(1, 100)] private float recoveryPercentage = 50f;
    
    private Boss _boss;
    private bool _isStunned;
    private bool _isInvulnerable;

    protected override void Awake()
    {
        base.Awake();
        _boss = GetComponentInParent<Boss>();
    }
    
    private void Start()
    {
        _boss = GetComponentInParent<Boss>();
    }

    protected virtual IEnumerator StunModule()
    {
        _isInvulnerable = true;
        _isStunned = true;

        yield return new WaitForSeconds(stunTime);

        _isStunned = false;

        RecoverFromStun();
    }

    protected virtual void RecoverFromStun()
    {
        var newHp = (recoveryPercentage * hp) / 100;
        _currentHp = newHp;
        
        _isInvulnerable = false;
    }
    
    public override void TakeDamage(float damage)
    {
        if (_isInvulnerable) 
            return;
        
        _currentHp -= damage;
        StartCoroutine(ShowDamage());

        if (_currentHp <= 0)
            StartCoroutine(StunModule());
    }
}
