using MM.ScriptableObjects;
using UnityEngine;

namespace MM.UI
{
    /// <summary>
    /// Represents a level point in the world map that can be clicked to open the level selection window.
    /// </summary>
    public class WorldMapLevelPoint : MonoBehaviour
    {
        #region Private Variables
        
        [SerializeField] private LevelCardData levelCardData;
        [SerializeField] private LevelCard levelCardObject;
        [Header("UI")]
        [SerializeField] private RectTransform levelIndicator;

        private LineRenderer _lineRenderer;
        private Camera _cam;
        
        private static WorldMapLevelPoint _currentSelected;
        
        #endregion

        #region Properties

        public LevelCardData LevelCardData => levelCardData;

        #endregion

        #region MonoBehaviour Functions
        
        private void Awake()
        {
            _lineRenderer = GetComponentInChildren<LineRenderer>();
            
            _cam = Camera.main;
        }
        
        private void Update()
        {
            UpdateLineRenderer();
        }
        
        private void OnMouseDown()
        {
            var distance = Vector3.Distance(_cam.transform.position, transform.position);

            
            const float maxDistance = 1.3f;
            if (!MainMenuManager.Instance.CanSelectLevels() || distance > maxDistance)
                return;
        
            _currentSelected = this;
            
            MenuUIManager.Instance.ShowLevel(levelCardData);
        }
        
        #endregion

        #region Private Functions
        
        /// <summary>
        /// Set the positions of the line renderer
        /// </summary>
        private void SetPositions()
        {
            if (!_lineRenderer.enabled)
                _lineRenderer.enabled = true;
        
            _lineRenderer.positionCount = 2;

            var screenPosition = RectTransformUtility.WorldToScreenPoint(_cam, levelIndicator.position);
            var worldPosition = _cam.ScreenToWorldPoint(new Vector3(screenPosition.x, screenPosition.y, _cam.nearClipPlane));
        
            _lineRenderer.SetPosition(0, _lineRenderer.transform.position);
            _lineRenderer.SetPosition(1, worldPosition);
        }

        private void UpdateLineRenderer()
        {
            // Check if window "--LEVELS--" in canvas is active
            var parent = levelIndicator.transform.parent.parent;
            var levelsWindowsActive = parent.parent.transform.gameObject.activeSelf;
            
            var lcd = levelCardObject.GetLevelCardData();
            
            if (_currentSelected != this ||
                !levelsWindowsActive ||
                !levelCardObject.gameObject.activeSelf ||
                levelCardData.CardType != lcd.CardType)
            {
                _lineRenderer.enabled = false;
                return;
            }
            
            SetPositions();
        }
        
        #endregion

        #region Public Functions

        // Reset the selected level to show
        public static void ResetCurrentSelected()
        {
            _currentSelected = null;
        }

        #endregion
    }
}
