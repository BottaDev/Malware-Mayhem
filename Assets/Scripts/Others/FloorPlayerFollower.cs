using System.Collections;
using MM.Entities.Enemies.Bosses;
using MM.Events;
using UnityEngine;

namespace MM.Others
{
    public class FloorPlayerFollower : MonoBehaviour
    {
        #region Private Variables
        
        [SerializeField] private MeshRenderer floor;
        
        private Transform _player;
        private Transform _boss;
        private Material _floorMat;
        private bool _playerSpawn;
        
        private static readonly int PlayerPosition = Shader.PropertyToID("_PlayerPosition");
        private static readonly int BossPosition = Shader.PropertyToID("_BossPosition");

        #endregion

        #region Monobehaviour Functions
        
        private void Start()
        {
            EventManager.Instance.Subscribe(NameEvent.OnPlayerSpawned, OnPlayerSpawned);
            EventManager.Instance.Subscribe(NameEvent.OnBossSpawned, OnBossSpawned);
            
            _floorMat = floor.material;
            
            StartCoroutine(nameof(WaitToPlayer));
        }

        private void Update()
        {
            if(!_playerSpawn) { return; }
            
            if (_player != null)
            {
                var playerPos = _player.position;
                _floorMat.SetVector(PlayerPosition, new Vector3(playerPos.x, 0, playerPos.z));
            }
            
            if(_boss != null)
            {
                var bossPos = _boss.transform.position;
                _floorMat.SetVector(BossPosition, new Vector3(bossPos.x, 0, bossPos.z));
            }
        }

        #endregion

        #region Private Functions

        /// <summary>
        /// Wait until player is spawned to get his transform.
        /// </summary>
        private IEnumerator WaitToPlayer()
        {
            yield return new WaitUntil(() => _playerSpawn);
            
            EventManager.Instance.Unsubscribe(NameEvent.OnPlayerSpawned, OnPlayerSpawned);

            _player = GameObject.FindWithTag("Player").GetComponent<Transform>();
        }

        #endregion

        #region Event Functions

        private void OnPlayerSpawned(params object[] parameter)
        {
            _playerSpawn = true;
        }

        private void OnBossSpawned(params object[] parameters)
        {
            var boss = (Boss)parameters[0];
            _boss = boss.transform;
        }

        #endregion
    }
}