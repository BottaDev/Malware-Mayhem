using UnityEngine;
using Cinemachine;
using MM.Common;

namespace MM.Cam
{
    public class CameraShakeManager : MonoBehaviourSingleton<CameraShakeManager>
    {
        #region Private Variables
    
        private CinemachineVirtualCamera _virtualCamera;
        private CinemachineBasicMultiChannelPerlin _perlin;
        private float _shakeTimer;
        private float _shakeTimerTotal;
        private float _startingIntensity;
    
        #endregion
    
        #region MonoBehaviour Functions
    
        protected override void Awake()
        {
            _virtualCamera = GetComponent<CinemachineVirtualCamera>();
            _perlin = _virtualCamera.GetCinemachineComponent<CinemachineBasicMultiChannelPerlin>();
        }
    
        private void OnEnable()
        {
            m_Instance = this;
        }
    
        private void Update()
        {
            LerpShake();
        }
    
        #endregion
    
        #region Public Functions
    
        /// <summary>
        /// Shake the camera setting the values of the shake
        /// </summary>
        /// <param name="intensity"></param>
        /// <param name="time"></param>
        public void ShakeCamera(float intensity, float time)
        {
            _perlin.m_AmplitudeGain = intensity;
            _startingIntensity = intensity;
    
            _shakeTimerTotal = time;
            _shakeTimer = time;
        }
    
        #endregion
    
        #region Private Functions
    
        private void LerpShake()
        {
            if (_shakeTimer <= 0)
            {
                return;
            }
    
            // Lerp the camera using the delta time
            _shakeTimer -= Time.deltaTime;
            _perlin.m_AmplitudeGain = Mathf.Lerp(_startingIntensity, 0f, 1 - (_shakeTimer / _shakeTimerTotal));
        }
    
        #endregion
    }
}
