using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class BossManager : MonoBehaviour
{
    public static BossManager Instance;

    [SerializeField] private List<GameObject> bossSubmodules;
    [SerializeField, Range(0f, 10f)] private float waitToAttack;
    
    private bool _fightSubmodule;
    private int _moduleIndex;

    private bool _attackPaused;

    private void Awake()
    {
        if (Instance == null)
            Instance = this;
    }

    private void Start()
    {
        EventManager.Instance.Subscribe(EventManager.NameEvent.OnAbsorbedSubmodule, OnAbsorbedSubmodule);
        EventManager.Instance.Subscribe(EventManager.NameEvent.OnReturnedBoss, OnReturnedBoss);
    }

    private void OnAbsorbedSubmodule(params object[] parameters)
    {
        _moduleIndex = (int) parameters[0];
        foreach (var t in bossSubmodules)
        {
            t.SetActive(false);
        }

        bossSubmodules[_moduleIndex].SetActive(true);
        _fightSubmodule = true;
        StartCoroutine(WaitToFireAgain());
    }
    
    private void OnReturnedBoss(params object[] parameters)
    {
        foreach (var t in bossSubmodules)
        {
            t.SetActive(false);
        }
        
        bossSubmodules[0].SetActive(true);
        _fightSubmodule = false;
        StartCoroutine(WaitToFireAgain());
    }

    public bool CheckFightSubmodule()
    {
        return _fightSubmodule;
    }

    public bool GetAttackPause()
    {
        return _attackPaused;
    }

    private IEnumerator WaitToFireAgain()
    {
        _attackPaused = true;
        yield return new WaitForSecondsRealtime(waitToAttack);
        _attackPaused = false;
    }
}
