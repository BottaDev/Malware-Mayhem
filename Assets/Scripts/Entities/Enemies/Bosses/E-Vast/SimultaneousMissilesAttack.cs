using UnityEngine;

public class SimultaneousMissilesAttack : SubmoduleAttack
{
    [Header("Attack Patter")]
    [SerializeField] private int missileCount = 12;
    [SerializeField] private GameObject missile;
    [SerializeField] private GameObject missileModel;
    [SerializeField] private Transform[] missileModelPosition;

    [Header("Area Parameters")]
    [SerializeField, Range(1f, 30f)] private float attackRange = 12f;
    [SerializeField] private LayerMask obstacleMask;

    public override void MakeAction()
    {
        base.MakeAction();
        SpawnMissiles();
    }

    private void SpawnMissiles()
    {
        for (var i = 0; i < missileCount; i++)
        {
            if(_submodule.GetIsStunned())
                return;

            var randomPos = Random.insideUnitSphere * attackRange + transform.position;
            randomPos.y = .1f;

            var colliders = Physics.OverlapSphere(randomPos, .1f, obstacleMask);
            
            if(colliders.Length > 0)
                continue;
            
            Instantiate(missileModel, 
                i < 6 ? missileModelPosition[i].position : missileModelPosition[i - 6].position,
                Quaternion.identity);

            const float yAxis = 1f;
            var pos = new Vector3(randomPos.x, yAxis, randomPos.z);

            Instantiate(missile, pos, Quaternion.identity);
        }
    }
}