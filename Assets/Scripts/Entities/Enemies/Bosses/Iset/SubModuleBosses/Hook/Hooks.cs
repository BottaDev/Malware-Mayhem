using MM.Common;
using MM.Entities.Player;
using MM.Events;
using UnityEngine;
using Random = UnityEngine.Random;

namespace MM.Entities.Enemies.Bosses.Iset.SubModuleBosses
{
    public class Hooks : MonoBehaviour
    {
        #region Private Variables

        [SerializeField] private GameObject model;
        [SerializeField] private Transform spawnPoint;
        [SerializeField] private BossBulletType bulletType;
        [SerializeField] private float minSpawnRate = 1f;
        [SerializeField] private float maxSpawnRate = 2f;

        private Transform _playerTransform;
        private float _spawnRate;

        #endregion

        #region Monobehaviour Functions

        private void Awake()
        {
            ChooseSpawnRate();

            EventManager.Instance.Subscribe(NameEvent.OnPlayerSpawned, OnPlayerSpawned);
        }

        private void Update()
        {
            if (_playerTransform == null) { return; }

            if (_spawnRate > 0)
            {
                _spawnRate -= Time.deltaTime;
            }
            else
            {
                Shoot();
            }
        }

        #endregion

        #region Private Functions

        private void Shoot()
        {
            model.transform.LookAt(_playerTransform.position);
            var modelRotation = model.transform.rotation;
            modelRotation.x = 0;
            modelRotation.z = 0;
            model.transform.rotation = modelRotation;

            var bullet = EnemyPoolManager.Instance.GetBossBullet(bulletType);
            var bulletTransform = bullet.transform;

            bulletTransform.position = spawnPoint.position;
            bulletTransform.rotation = modelRotation;

            ChooseSpawnRate();
        }

        private void ChooseSpawnRate()
        {
            _spawnRate = Random.Range(minSpawnRate, maxSpawnRate);
        }

        #endregion

        #region Event Functions

        private void OnPlayerSpawned(params object[] parameters)
        {
            var player = (PlayerModel)parameters[1];
            _playerTransform = player.transform;
        }

        #endregion
    }
}