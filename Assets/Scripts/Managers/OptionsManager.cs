using MM.Common;
using TMPro;
using UnityEngine;
using UnityEngine.UI;

namespace MM.Data
{
    /// <summary>
    /// Save the settings of the game.
    /// </summary>
    public class OptionsManager : MonoBehaviourSingleton<OptionsManager>
    {
        #region Private Variables

        [SerializeField] private Slider volumeSlider;
        [SerializeField] private Toggle fullScreenToggle;
        [SerializeField] private TMP_Dropdown resolutionDropdown;

        #endregion

        #region MonoBehaviour Functions

        protected override void Awake()
        {
            base.Awake();

            volumeSlider.onValueChanged.AddListener(ChangeVolume);
            fullScreenToggle.onValueChanged.AddListener(ChangeFullScreen);
            resolutionDropdown.onValueChanged.AddListener(ChangeResolution);
            
            volumeSlider.value = SaveFile.Instance.Settings.Sound;
            fullScreenToggle.isOn = SaveFile.Instance.Settings.FullScreen;
            resolutionDropdown.value = SaveFile.Instance.Settings.Resolution;
        }

        #endregion

        #region Private Functions

        private static void ChangeVolume(float value)
        {
            SaveFile.Instance.Settings.Sound = value;;
            SaveFile.Save();
        }

        private static void ChangeFullScreen(bool enable)
        {
            SaveFile.Instance.Settings.FullScreen = enable;
            SaveFile.Save();
        }

        private static void ChangeResolution(int arg)
        {
            SaveFile.Instance.Settings.Resolution = arg;
            SaveFile.Save();
        }

        #endregion
    }

}
