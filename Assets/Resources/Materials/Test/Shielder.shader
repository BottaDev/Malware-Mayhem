// Made with Amplify Shader Editor
// Available at the Unity Asset Store - http://u3d.as/y3X 
Shader "Shielder"
{
	Properties
	{
		_TextureSample0("Texture Sample 0", 2D) = "white" {}
		_ShieldBG("ShieldBG", Color) = (0.8392157,0.2198323,0,0)
		_ShieldDetail("ShieldDetail", Color) = (0.9333333,0.668768,0.04705882,0)
		_shieldMask("shieldMask", 2D) = "white" {}
		_shielderEmission("shielderEmission", 2D) = "white" {}
		_shielderAlbedo("shielderAlbedo", 2D) = "white" {}
		[HideInInspector] _texcoord( "", 2D ) = "white" {}
		[HideInInspector] __dirty( "", Int ) = 1
	}

	SubShader
	{
		Tags{ "RenderType" = "Transparent"  "Queue" = "Transparent+0" "IgnoreProjector" = "True" "IsEmissive" = "true"  }
		Cull Back
		ZWrite On
		Blend SrcAlpha OneMinusSrcAlpha
		
		CGINCLUDE
		#include "UnityShaderVariables.cginc"
		#include "UnityPBSLighting.cginc"
		#include "Lighting.cginc"
		#pragma target 3.0
		struct Input
		{
			float2 uv_texcoord;
			float3 worldPos;
			float3 worldNormal;
		};

		uniform sampler2D _shielderAlbedo;
		uniform float4 _shielderAlbedo_ST;
		uniform sampler2D _shielderEmission;
		uniform float4 _shielderEmission_ST;
		uniform float4 _ShieldBG;
		uniform float4 _ShieldDetail;
		uniform sampler2D _TextureSample0;
		uniform sampler2D _shieldMask;
		uniform float4 _shieldMask_ST;

		void surf( Input i , inout SurfaceOutputStandard o )
		{
			float2 uv_shielderAlbedo = i.uv_texcoord * _shielderAlbedo_ST.xy + _shielderAlbedo_ST.zw;
			o.Albedo = tex2D( _shielderAlbedo, uv_shielderAlbedo ).rgb;
			float2 uv_shielderEmission = i.uv_texcoord * _shielderEmission_ST.xy + _shielderEmission_ST.zw;
			float mulTime20 = _Time.y * 0.3;
			float2 appendResult18 = (float2(mulTime20 , mulTime20));
			float2 uv_TexCoord14 = i.uv_texcoord * float2( 4,4 ) + appendResult18;
			float3 ase_worldPos = i.worldPos;
			float3 ase_worldViewDir = normalize( UnityWorldSpaceViewDir( ase_worldPos ) );
			float3 ase_worldNormal = i.worldNormal;
			float fresnelNdotV4 = dot( ase_worldNormal, ase_worldViewDir );
			float fresnelNode4 = ( 0.0 + 1.2 * pow( 1.0 - fresnelNdotV4, 2.0 ) );
			float clampResult23 = clamp( ( tex2D( _TextureSample0, uv_TexCoord14 ).r + fresnelNode4 ) , 0.0 , 1.0 );
			float4 lerpResult6 = lerp( _ShieldBG , _ShieldDetail , clampResult23);
			float4 Shield24 = lerpResult6;
			float2 uv_shieldMask = i.uv_texcoord * _shieldMask_ST.xy + _shieldMask_ST.zw;
			float4 tex2DNode27 = tex2D( _shieldMask, uv_shieldMask );
			o.Emission = ( tex2D( _shielderEmission, uv_shielderEmission ) + ( Shield24 * tex2DNode27 ) ).rgb;
			float lerpResult29 = lerp( 1.0 , 0.5 , tex2DNode27.r);
			o.Alpha = lerpResult29;
		}

		ENDCG
		CGPROGRAM
		#pragma surface surf Standard keepalpha fullforwardshadows exclude_path:deferred 

		ENDCG
		Pass
		{
			Name "ShadowCaster"
			Tags{ "LightMode" = "ShadowCaster" }
			ZWrite On
			CGPROGRAM
			#pragma vertex vert
			#pragma fragment frag
			#pragma target 3.0
			#pragma multi_compile_shadowcaster
			#pragma multi_compile UNITY_PASS_SHADOWCASTER
			#pragma skip_variants FOG_LINEAR FOG_EXP FOG_EXP2
			#include "HLSLSupport.cginc"
			#if ( SHADER_API_D3D11 || SHADER_API_GLCORE || SHADER_API_GLES || SHADER_API_GLES3 || SHADER_API_METAL || SHADER_API_VULKAN )
				#define CAN_SKIP_VPOS
			#endif
			#include "UnityCG.cginc"
			#include "Lighting.cginc"
			#include "UnityPBSLighting.cginc"
			sampler3D _DitherMaskLOD;
			struct v2f
			{
				V2F_SHADOW_CASTER;
				float2 customPack1 : TEXCOORD1;
				float3 worldPos : TEXCOORD2;
				float3 worldNormal : TEXCOORD3;
				UNITY_VERTEX_INPUT_INSTANCE_ID
				UNITY_VERTEX_OUTPUT_STEREO
			};
			v2f vert( appdata_full v )
			{
				v2f o;
				UNITY_SETUP_INSTANCE_ID( v );
				UNITY_INITIALIZE_OUTPUT( v2f, o );
				UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO( o );
				UNITY_TRANSFER_INSTANCE_ID( v, o );
				Input customInputData;
				float3 worldPos = mul( unity_ObjectToWorld, v.vertex ).xyz;
				half3 worldNormal = UnityObjectToWorldNormal( v.normal );
				o.worldNormal = worldNormal;
				o.customPack1.xy = customInputData.uv_texcoord;
				o.customPack1.xy = v.texcoord;
				o.worldPos = worldPos;
				TRANSFER_SHADOW_CASTER_NORMALOFFSET( o )
				return o;
			}
			half4 frag( v2f IN
			#if !defined( CAN_SKIP_VPOS )
			, UNITY_VPOS_TYPE vpos : VPOS
			#endif
			) : SV_Target
			{
				UNITY_SETUP_INSTANCE_ID( IN );
				Input surfIN;
				UNITY_INITIALIZE_OUTPUT( Input, surfIN );
				surfIN.uv_texcoord = IN.customPack1.xy;
				float3 worldPos = IN.worldPos;
				half3 worldViewDir = normalize( UnityWorldSpaceViewDir( worldPos ) );
				surfIN.worldPos = worldPos;
				surfIN.worldNormal = IN.worldNormal;
				SurfaceOutputStandard o;
				UNITY_INITIALIZE_OUTPUT( SurfaceOutputStandard, o )
				surf( surfIN, o );
				#if defined( CAN_SKIP_VPOS )
				float2 vpos = IN.pos;
				#endif
				half alphaRef = tex3D( _DitherMaskLOD, float3( vpos.xy * 0.25, o.Alpha * 0.9375 ) ).a;
				clip( alphaRef - 0.01 );
				SHADOW_CASTER_FRAGMENT( IN )
			}
			ENDCG
		}
	}
	Fallback "Diffuse"
	CustomEditor "ASEMaterialInspector"
}
/*ASEBEGIN
Version=18900
510;362;1044;579;373.3209;435.1924;1.69862;True;False
Node;AmplifyShaderEditor.SimpleTimeNode;20;-2758.448,-465.6439;Inherit;False;1;0;FLOAT;0.3;False;1;FLOAT;0
Node;AmplifyShaderEditor.DynamicAppendNode;18;-2524.427,-501.2757;Inherit;False;FLOAT2;4;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;1;FLOAT2;0
Node;AmplifyShaderEditor.TextureCoordinatesNode;14;-2322.54,-548.8779;Inherit;False;0;-1;2;3;2;SAMPLER2D;;False;0;FLOAT2;4,4;False;1;FLOAT2;0,0;False;5;FLOAT2;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4
Node;AmplifyShaderEditor.SamplerNode;15;-2072.71,-578.5558;Inherit;True;Property;_TextureSample0;Texture Sample 0;0;0;Create;True;0;0;0;False;0;False;-1;None;e224e8e14033099419880b077f7e9854;True;0;False;white;Auto;False;Object;-1;Auto;Texture2D;8;0;SAMPLER2D;;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;5;FLOAT;1;False;6;FLOAT;0;False;7;SAMPLERSTATE;;False;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4
Node;AmplifyShaderEditor.FresnelNode;4;-2082.099,-299.7794;Inherit;True;Standard;WorldNormal;ViewDir;False;False;5;0;FLOAT3;0,0,1;False;4;FLOAT3;0,0,0;False;1;FLOAT;0;False;2;FLOAT;1.2;False;3;FLOAT;2;False;1;FLOAT;0
Node;AmplifyShaderEditor.SimpleAddOpNode;21;-1746.594,-395.3232;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0
Node;AmplifyShaderEditor.ClampOpNode;23;-1573.498,-396.5975;Inherit;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;1;False;1;FLOAT;0
Node;AmplifyShaderEditor.ColorNode;8;-1626.864,-804.9274;Inherit;False;Property;_ShieldBG;ShieldBG;1;0;Create;True;0;0;0;False;0;False;0.8392157,0.2198323,0,0;0.8392157,0.2565619,0,1;True;0;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4
Node;AmplifyShaderEditor.ColorNode;3;-1630.906,-638.3044;Inherit;False;Property;_ShieldDetail;ShieldDetail;2;0;Create;True;0;0;0;False;0;False;0.9333333,0.668768,0.04705882,0;1,0.8577045,0,1;True;0;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4
Node;AmplifyShaderEditor.SamplerNode;27;-664.0235,274.9549;Inherit;True;Property;_shieldMask;shieldMask;4;0;Create;True;0;0;0;False;0;False;-1;f738c9b3163fcd641899e24fb98940f9;f738c9b3163fcd641899e24fb98940f9;True;0;False;white;Auto;False;Object;-1;Auto;Texture2D;8;0;SAMPLER2D;;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;5;FLOAT;1;False;6;FLOAT;0;False;7;SAMPLERSTATE;;False;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4
Node;AmplifyShaderEditor.LerpOp;6;-1376.046,-444.6473;Inherit;False;3;0;COLOR;0,0,0,0;False;1;COLOR;0,0,0,0;False;2;FLOAT;0;False;1;COLOR;0
Node;AmplifyShaderEditor.RegisterLocalVarNode;24;-1040.635,-491.6522;Inherit;False;Shield;-1;True;1;0;COLOR;0,0,0,0;False;1;COLOR;0
Node;AmplifyShaderEditor.WireNode;33;-213.3716,338.7297;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0
Node;AmplifyShaderEditor.GetLocalVarNode;25;-517.5978,43.03635;Inherit;False;24;Shield;1;0;OBJECT;;False;1;COLOR;0
Node;AmplifyShaderEditor.WireNode;32;-203.661,387.2832;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode;30;-172.762,253.9395;Inherit;False;Constant;_Float1;Float 1;5;0;Create;True;0;0;0;False;0;False;1;0;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.RangedFloatNode;2;-171.7569,328.1367;Inherit;False;Constant;_Float0;Float 0;0;0;Create;True;0;0;0;False;0;False;0.5;0;0;0;0;1;FLOAT;0
Node;AmplifyShaderEditor.WireNode;31;4.147448,381.4568;Inherit;False;1;0;FLOAT;0;False;1;FLOAT;0
Node;AmplifyShaderEditor.SimpleMultiplyOpNode;26;-299.0117,44.62885;Inherit;False;2;2;0;COLOR;0,0,0,0;False;1;COLOR;0,0,0,0;False;1;COLOR;0
Node;AmplifyShaderEditor.SamplerNode;34;-157.0305,-123.591;Inherit;True;Property;_shielderEmission;shielderEmission;5;0;Create;True;0;0;0;False;0;False;-1;6e3d957b9ae114045b9e9bee4de7ae0c;6e3d957b9ae114045b9e9bee4de7ae0c;True;0;False;white;Auto;False;Object;-1;Auto;Texture2D;8;0;SAMPLER2D;;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;5;FLOAT;1;False;6;FLOAT;0;False;7;SAMPLERSTATE;;False;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4
Node;AmplifyShaderEditor.SamplerNode;36;210.9118,-191.6033;Inherit;True;Property;_shielderAlbedo;shielderAlbedo;6;0;Create;True;0;0;0;False;0;False;-1;c7ed53d288b2d924ca1e5b459ad39599;c7ed53d288b2d924ca1e5b459ad39599;True;0;False;white;Auto;False;Object;-1;Auto;Texture2D;8;0;SAMPLER2D;;False;1;FLOAT2;0,0;False;2;FLOAT;0;False;3;FLOAT2;0,0;False;4;FLOAT2;0,0;False;5;FLOAT;1;False;6;FLOAT;0;False;7;SAMPLERSTATE;;False;5;COLOR;0;FLOAT;1;FLOAT;2;FLOAT;3;FLOAT;4
Node;AmplifyShaderEditor.LerpOp;29;42.4144,259.7159;Inherit;False;3;0;FLOAT;0;False;1;FLOAT;0;False;2;FLOAT;0;False;1;FLOAT;0
Node;AmplifyShaderEditor.SimpleAddOpNode;35;238.3987,39.83992;Inherit;False;2;2;0;COLOR;0,0,0,0;False;1;COLOR;0,0,0,0;False;1;COLOR;0
Node;AmplifyShaderEditor.StandardSurfaceOutputNode;0;741.5033,-8.475449;Float;False;True;-1;2;ASEMaterialInspector;0;0;Standard;Shielder;False;False;False;False;False;False;False;False;False;False;False;False;False;False;True;False;False;False;False;False;False;Back;1;False;-1;0;False;-1;False;0;False;-1;0;False;-1;False;0;Custom;0.5;True;True;0;True;Transparent;;Transparent;ForwardOnly;14;all;True;True;True;True;0;False;-1;False;0;False;-1;255;False;-1;255;False;-1;0;False;-1;0;False;-1;0;False;-1;0;False;-1;0;False;-1;0;False;-1;0;False;-1;0;False;-1;False;2;15;10;25;False;0.5;True;2;5;False;-1;10;False;-1;0;0;False;-1;0;False;-1;0;False;-1;0;False;-1;0;False;0;0,0,0,0;VertexScale;True;False;Cylindrical;False;Relative;0;;3;-1;-1;-1;0;False;0;0;False;-1;-1;0;False;-1;0;0;0;False;0.1;False;-1;0;False;-1;False;16;0;FLOAT3;0,0,0;False;1;FLOAT3;0,0,0;False;2;FLOAT3;0,0,0;False;3;FLOAT;0;False;4;FLOAT;0;False;5;FLOAT;0;False;6;FLOAT3;0,0,0;False;7;FLOAT3;0,0,0;False;8;FLOAT;0;False;9;FLOAT;0;False;10;FLOAT;0;False;13;FLOAT3;0,0,0;False;11;FLOAT3;0,0,0;False;12;FLOAT3;0,0,0;False;14;FLOAT4;0,0,0,0;False;15;FLOAT3;0,0,0;False;0
WireConnection;18;0;20;0
WireConnection;18;1;20;0
WireConnection;14;1;18;0
WireConnection;15;1;14;0
WireConnection;21;0;15;1
WireConnection;21;1;4;0
WireConnection;23;0;21;0
WireConnection;6;0;8;0
WireConnection;6;1;3;0
WireConnection;6;2;23;0
WireConnection;24;0;6;0
WireConnection;33;0;27;1
WireConnection;32;0;33;0
WireConnection;31;0;32;0
WireConnection;26;0;25;0
WireConnection;26;1;27;0
WireConnection;29;0;30;0
WireConnection;29;1;2;0
WireConnection;29;2;31;0
WireConnection;35;0;34;0
WireConnection;35;1;26;0
WireConnection;0;0;36;0
WireConnection;0;2;35;0
WireConnection;0;9;29;0
ASEEND*/
//CHKSM=56F6CB88997E6269BEDE5588E6B94ACFF66C57FD