using System.Collections;
using MM.Bullets;
using MM.Common;
using UnityEngine;

namespace MM.Entities.Enemies.Bosses.Iset.SubModuleBosses
{
    public class HookLineAttack : HookAttack
    {
        #region Private Variables
        
        [SerializeField] private Transform spawnPoint;
        [SerializeField] private float timeBetweenShots = 1f;

        #endregion

        #region Private Functions

        private IEnumerator SpawnShots()
        {
            for (var i = 0; i < totalBullets; i++)
            {
                Bullet bullet;
                
                switch (bulletType)
                {
                    case BossBulletType.RapidGreen:
                        bullet = EnemyPoolManager.Instance.rapidGreenBossBulletPool.Get();
                        bullet.pool = EnemyPoolManager.Instance.rapidGreenBossBulletPool;
                        break;
                    case BossBulletType.MediumGreen:
                        bullet = EnemyPoolManager.Instance.mediumGreenBossBulletPool.Get();
                        bullet.pool = EnemyPoolManager.Instance.mediumGreenBossBulletPool;
                        break;
                    case BossBulletType.SlowGreen:
                        bullet = EnemyPoolManager.Instance.slowGreenBossBulletPool.Get();
                        bullet.pool = EnemyPoolManager.Instance.slowGreenBossBulletPool;
                        break;
                
                    case BossBulletType.RapidRed:
                        bullet = EnemyPoolManager.Instance.rapidRedBossBulletPool.Get();
                        bullet.pool = EnemyPoolManager.Instance.rapidRedBossBulletPool;
                        break;
                    case BossBulletType.MediumRed:
                        bullet = EnemyPoolManager.Instance.mediumRedBossBulletPool.Get();
                        bullet.pool = EnemyPoolManager.Instance.mediumRedBossBulletPool;
                        break;
                    case BossBulletType.SlowRed:
                        bullet = EnemyPoolManager.Instance.slowRedBossBulletPool.Get();
                        bullet.pool = EnemyPoolManager.Instance.slowRedBossBulletPool;
                        break;
                
                    default:
                        bullet = EnemyPoolManager.Instance.rapidGreenBossBulletPool.Get();
                        bullet.pool = EnemyPoolManager.Instance.rapidGreenBossBulletPool;
                        break;
                }
                
                var bulletTransform = bullet.transform;
                bulletTransform.position = spawnPoint.position;
                bulletTransform.rotation = spawnPoint.rotation;
                
                yield return new WaitForSeconds(timeBetweenShots);
            }
            
            _hookSubBoss.ResetTimer();
        }

        #endregion

        #region Public Functions

        public override void Shot()
        {
            StartCoroutine(nameof(SpawnShots));
        }

        #endregion
    }
}