using UnityEngine;
using UnityEngine.Rendering.PostProcessing;

public class LowLifePostProcess : MonoBehaviour
{
    private PostProcessVolume _volume;
    private ChromaticAberration _chroma;
    private Vignette _vig;

    private void Start()
    {
        EventManager.Instance.Subscribe(EventManager.NameEvent.OnLowLife, OnLowLife);
        EventManager.Instance.Subscribe(EventManager.NameEvent.OnAbsorbedSubmodule, OnAbsorbedSubmodule);
        EventManager.Instance.Subscribe(EventManager.NameEvent.OnReturnedBoss, OnReturnedBoss);

        _volume = GetComponent<PostProcessVolume>();
        _volume.profile.TryGetSettings(out _chroma);
        _volume.profile.TryGetSettings(out _vig);
    }

    private void OnLowLife(params object[] parameters)
    {
        var lowLife = (bool) parameters[0];
        
        if (lowLife)
            SetLowLife();
        else
            SetHighLife();
    }

    private void OnAbsorbedSubmodule(params object[] parameters)
    {
        SetHighLife();
    }

    private void OnReturnedBoss(params object[] parameters)
    {
        Invoke(nameof(CheckPlayerLife), .1f);
    }

    private void CheckPlayerLife()
    {
        var player = LevelManager.Instance.GetPlayer();
        
        if (player.GetLowLife())
            SetLowLife();
        else
            SetHighLife();
    }

    private void SetLowLife()
    {
        AudioManager.Instance.PlayMusic("TresholdLife");
        _chroma.intensity.value = 1f;
        _vig.intensity.value = .55f;
    }

    private void SetHighLife()
    {
        AudioManager.Instance.StopMusic("TresholdLife");
        _chroma.intensity.value = 0;
        _vig.intensity.value = 0;
    }
}
