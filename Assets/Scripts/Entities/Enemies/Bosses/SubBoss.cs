using MM.Entities.Player.Arms;
using MM.Events;
using MM.Gameplay;
using MM.Sound;
using UnityEngine;

namespace MM.Entities.Enemies.Bosses
{
    public class SubBoss : Boss
    {
        #region Private Variables
        [Header("SubBoss Parameters")] 
        [SerializeField] protected int submoduleIndex;
        #endregion
    
        #region Private Variables
        protected override void Start() { /* Do nothing... */ }
        #endregion

        #region Public Functions
        public override void TakeDamage(float damage, PlayerArm.ArmType aType = PlayerArm.ArmType.None, bool showDamage = true)
        {
            _currentHp -= damage;
        
            if (showDamage)
                StartCoroutine(ShowDamage());
        
            AudioManager.Instance.PlayAudioClip(Sounds.SoundType.EnemyDamaged, transform.position);
        
            if (_currentHp <= 0)
            {
                var player = LevelManager.Instance.GetPlayer();
                Destroy(player.gameObject);
            
                EventManager.Instance.Trigger(NameEvent.OnReturnedBoss, true, submoduleIndex);
            }
        }
        
        public int GetSubmoduleIndex() => submoduleIndex;
        #endregion
    }
}
