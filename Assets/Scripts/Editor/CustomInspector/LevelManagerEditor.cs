using UnityEditor;
using UnityEngine;

namespace MM_Editor.MM_CustomInspector
{
    [CustomEditor(typeof(LevelManager))]
    public class LevelManagerEditor : Editor
    {
        #region Private Variables

        private LevelManager _lvlManager;
        private GUIStyle _title;
        private readonly GUILayoutOption _layoutOption = GUILayout.Width(280);
        
        #endregion

        #region Monobehaviour Functions
        
        private void OnEnable()
        {
            _lvlManager = (LevelManager)target;

            _title = new GUIStyle
            {
                normal =
                {
                    textColor = Color.white
                },
                alignment = TextAnchor.MiddleCenter,
                fontSize = 20
            };
        }

        public override void OnInspectorGUI()
        {
            serializedObject.Update();

            GUILayout.Label("Boss Parameters", _title);

            GUILayout.Space(10);

            _lvlManager.bossSpawn =
                EditorGUILayout.ObjectField("Boss Prefab", _lvlManager.bossSpawn, typeof(GameObject), true) as
                    GameObject;

            GUILayout.Space(5);

            if (_lvlManager.bossSpawn != null)
            {
                GUI.DrawTexture(GUILayoutUtility.GetRect(150, 150), AssetPreview.GetAssetPreview(_lvlManager.bossSpawn),
                    ScaleMode.ScaleToFit);
            }

            GUILayout.Space(10);

            _lvlManager.bossSpawnPosition =
                EditorGUILayout.ObjectField("Boss Spawn Position", _lvlManager.bossSpawnPosition, typeof(Transform),
                    true) as Transform;

            EditorGUILayout.BeginHorizontal();

            GUILayout.Label("Boss Initial Spawn Time");
            _lvlManager.initialSpawnTime = EditorGUILayout.Slider(_lvlManager.initialSpawnTime, 0, 10, _layoutOption);

            EditorGUILayout.EndHorizontal();
            
            EditorGUILayout.BeginHorizontal();

            GUILayout.Label("Boss Initial Attack Time");
            _lvlManager.initialAttackTime = EditorGUILayout.Slider(_lvlManager.initialAttackTime, 0, 5, _layoutOption);

            EditorGUILayout.EndHorizontal();

            EditorGUILayout.Space(10);

            GUILayout.Label("Boss Parameters", _title);

            EditorGUILayout.Space(10);

            _lvlManager.playerSpawnPosition = EditorGUILayout.ObjectField("Player Spawn Position",
                _lvlManager.playerSpawnPosition, typeof(Transform), true) as Transform;

            _lvlManager.playerSpawn =
                EditorGUILayout.ObjectField("Player Spawn Prefab", _lvlManager.playerSpawn, typeof(PlayerSpawn), true)
                    as PlayerSpawn;

            GUILayout.Space(5);

            if (_lvlManager.playerSpawn != null)
            {
                GUI.DrawTexture(GUILayoutUtility.GetRect(150, 150),
                    AssetPreview.GetAssetPreview(_lvlManager.playerSpawn.gameObject), ScaleMode.ScaleToFit);
            }

            serializedObject.ApplyModifiedProperties();

            if (GUI.changed)
            {
                EditorUtility.SetDirty(target);
            }
        }
        
        #endregion
    }
}