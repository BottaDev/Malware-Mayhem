using MM.Entities.Player;
using MM.Common;
using MM.Sound;
using MM.UI;
using UnityEngine;

namespace MM.Gameplay
{
    public class PauseManager : MonoBehaviourSingleton<PauseManager>
    {
        #region Private Variables

        private bool _playerSpawn;
        private bool _isPaused;
        private bool _isPlayerAbsorbing;
        private PlayerController _playerController;

        #endregion

        #region Properties

        public bool IsPaused => _isPaused;

        #endregion

        #region MonoBehaviour Functions

        private void Update()
        {
            if (_isPlayerAbsorbing)
            {
                return;
            }

            if (Input.GetKeyDown(KeyCode.Escape) && _isPaused)
            {
                ResumeLevel();
            }
            else if (Input.GetKeyDown(KeyCode.Escape) && !_isPaused)
            {
                PauseLevel();
            }
        }

        #endregion

        #region Public Functions

        public static void SetLevelSpeed(float scale)
        {
            Time.timeScale = scale;
            Time.fixedDeltaTime = Time.fixedUnscaledDeltaTime * scale;
        }

        public void PauseLevel()
        {
            _isPaused = true;

            AudioManager.Instance.StopMusic();

            SetLevelSpeed(0);
            UIManager.Instance.PauseLevel();
        }

        public void ResumeLevel()
        {
            _isPaused = false;
            AudioManager.Instance.PlayMusic("Level 1-1");
            SetLevelSpeed(1);
            UIManager.Instance.ResumeLevel();
        }

        public void SetPlayerAbsorbing(bool enable)
        {
            _isPlayerAbsorbing = enable;
        }

        #endregion
    }
}